{"ast":null,"code":"import React,{useState}from'react';import{useAuth}from'../context/AuthContext';import{Header}from'./Header';import{Calendar}from'./Calendar';import{FinancialEntryForm}from'./FinancialEntryForm';import{useFinancialData}from'../hooks/useFinancialData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const{user,logout}=useAuth();const{entries,recurringPayments,addEntry,updateEntry,deleteEntry,addRecurringPayment,updateRecurringPayment,deleteRecurringPayment}=useFinancialData();const[currentDate,setCurrentDate]=useState(new Date());const[view,setView]=useState('month');// Calculate month data\nconst monthData={days:entries.reduce((acc,entry)=>{const dateStr=entry.date.toISOString().split('T')[0];if(!acc[dateStr]){acc[dateStr]={date:entry.date,entries:[],totalIncome:0,totalExpenses:0,dailyBalance:0,runningBalance:0};}acc[dateStr].entries.push(entry);if(entry.type==='income'){acc[dateStr].totalIncome+=entry.amount;}else{acc[dateStr].totalExpenses+=entry.amount;}acc[dateStr].dailyBalance=acc[dateStr].totalIncome-acc[dateStr].totalExpenses;return acc;},{}),totalIncome:entries.reduce((sum,entry)=>entry.type==='income'?sum+entry.amount:sum,0),totalExpenses:entries.reduce((sum,entry)=>entry.type==='expense'?sum+entry.amount:sum,0),monthlyBalance:entries.reduce((sum,entry)=>entry.type==='income'?sum+entry.amount:sum-entry.amount,0)};// Calculate year data\nconst months=Array.from({length:12},(_,i)=>{const monthEntries=entries.filter(entry=>entry.date.getMonth()===i);const totalIncome=monthEntries.reduce((sum,entry)=>entry.type==='income'?sum+entry.amount:sum,0);const totalExpenses=monthEntries.reduce((sum,entry)=>entry.type==='expense'?sum+entry.amount:sum,0);return{month:i,year:currentDate.getFullYear(),totalIncome,totalExpenses,monthlyBalance:totalIncome-totalExpenses};});const yearData={year:currentDate.getFullYear(),months,totalIncome:months.reduce((sum,month)=>sum+month.totalIncome,0),totalExpenses:months.reduce((sum,month)=>sum+month.totalExpenses,0),yearlyBalance:months.reduce((sum,month)=>sum+month.monthlyBalance,0)};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(Header,{title:\"Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-sidebar\",children:/*#__PURE__*/_jsx(FinancialEntryForm,{onSubmit:addEntry})}),/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-main\",children:/*#__PURE__*/_jsx(Calendar,{monthData:monthData,yearData:yearData,currentDate:currentDate,onDateChange:setCurrentDate,onAddEntry:addEntry,onUpdateEntry:updateEntry,onDeleteEntry:deleteEntry,view:view,onViewChange:setView,entries:entries,recurringPayments:recurringPayments,onAddRecurringPayment:addRecurringPayment,onUpdateRecurringPayment:updateRecurringPayment,onDeleteRecurringPayment:deleteRecurringPayment})})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useAuth","Header","Calendar","FinancialEntryForm","useFinancialData","jsx","_jsx","jsxs","_jsxs","Dashboard","user","logout","entries","recurringPayments","addEntry","updateEntry","deleteEntry","addRecurringPayment","updateRecurringPayment","deleteRecurringPayment","currentDate","setCurrentDate","Date","view","setView","monthData","days","reduce","acc","entry","dateStr","date","toISOString","split","totalIncome","totalExpenses","dailyBalance","runningBalance","push","type","amount","sum","monthlyBalance","months","Array","from","length","_","i","monthEntries","filter","getMonth","month","year","getFullYear","yearData","yearlyBalance","className","children","title","onSubmit","onDateChange","onAddEntry","onUpdateEntry","onDeleteEntry","onViewChange","onAddRecurringPayment","onUpdateRecurringPayment","onDeleteRecurringPayment"],"sources":["C:/Users/Administrator/Downloads/personal-budget-tracker/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { Header } from './Header';\r\nimport { Calendar } from './Calendar';\r\nimport { FinancialEntryForm } from './FinancialEntryForm';\r\nimport { useFinancialData } from '../hooks/useFinancialData';\r\nimport { MonthSummary } from '../types';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { user, logout } = useAuth();\r\n  const {\r\n    entries,\r\n    recurringPayments,\r\n    addEntry,\r\n    updateEntry,\r\n    deleteEntry,\r\n    addRecurringPayment,\r\n    updateRecurringPayment,\r\n    deleteRecurringPayment,\r\n  } = useFinancialData();\r\n\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [view, setView] = useState<'year' | 'month' | 'week' | 'day'>('month');\r\n\r\n  // Calculate month data\r\n  const monthData = {\r\n    days: entries.reduce((acc, entry) => {\r\n      const dateStr = entry.date.toISOString().split('T')[0];\r\n      if (!acc[dateStr]) {\r\n        acc[dateStr] = {\r\n          date: entry.date,\r\n          entries: [],\r\n          totalIncome: 0,\r\n          totalExpenses: 0,\r\n          dailyBalance: 0,\r\n          runningBalance: 0\r\n        };\r\n      }\r\n      acc[dateStr].entries.push(entry);\r\n      if (entry.type === 'income') {\r\n        acc[dateStr].totalIncome += entry.amount;\r\n      } else {\r\n        acc[dateStr].totalExpenses += entry.amount;\r\n      }\r\n      acc[dateStr].dailyBalance = acc[dateStr].totalIncome - acc[dateStr].totalExpenses;\r\n      return acc;\r\n    }, {} as Record<string, any>),\r\n    totalIncome: entries.reduce((sum, entry) => entry.type === 'income' ? sum + entry.amount : sum, 0),\r\n    totalExpenses: entries.reduce((sum, entry) => entry.type === 'expense' ? sum + entry.amount : sum, 0),\r\n    monthlyBalance: entries.reduce((sum, entry) => entry.type === 'income' ? sum + entry.amount : sum - entry.amount, 0)\r\n  };\r\n\r\n  // Calculate year data\r\n  const months: MonthSummary[] = Array.from({ length: 12 }, (_, i) => {\r\n    const monthEntries = entries.filter(entry => entry.date.getMonth() === i);\r\n    const totalIncome = monthEntries.reduce((sum, entry) => entry.type === 'income' ? sum + entry.amount : sum, 0);\r\n    const totalExpenses = monthEntries.reduce((sum, entry) => entry.type === 'expense' ? sum + entry.amount : sum, 0);\r\n    return {\r\n      month: i,\r\n      year: currentDate.getFullYear(),\r\n      totalIncome,\r\n      totalExpenses,\r\n      monthlyBalance: totalIncome - totalExpenses\r\n    };\r\n  });\r\n\r\n  const yearData = {\r\n    year: currentDate.getFullYear(),\r\n    months,\r\n    totalIncome: months.reduce((sum, month) => sum + month.totalIncome, 0),\r\n    totalExpenses: months.reduce((sum, month) => sum + month.totalExpenses, 0),\r\n    yearlyBalance: months.reduce((sum, month) => sum + month.monthlyBalance, 0)\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header title=\"Dashboard\" />\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"dashboard-sidebar\">\r\n          <FinancialEntryForm onSubmit={addEntry} />\r\n        </div>\r\n        <div className=\"dashboard-main\">\r\n          <Calendar\r\n            monthData={monthData}\r\n            yearData={yearData}\r\n            currentDate={currentDate}\r\n            onDateChange={setCurrentDate}\r\n            onAddEntry={addEntry}\r\n            onUpdateEntry={updateEntry}\r\n            onDeleteEntry={deleteEntry}\r\n            view={view}\r\n            onViewChange={setView}\r\n            entries={entries}\r\n            recurringPayments={recurringPayments}\r\n            onAddRecurringPayment={addRecurringPayment}\r\n            onUpdateRecurringPayment={updateRecurringPayment}\r\n            onDeleteRecurringPayment={deleteRecurringPayment}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
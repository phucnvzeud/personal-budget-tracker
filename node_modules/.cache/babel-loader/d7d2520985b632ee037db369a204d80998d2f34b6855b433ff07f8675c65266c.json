{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{// Check if user is logged in on mount\nconst token=localStorage.getItem('token');const userData=localStorage.getItem('user');if(token&&userData){setIsAuthenticated(true);setUser(JSON.parse(userData));}},[]);const login=async(email,password)=>{try{setLoading(true);setError(null);// TODO: Replace with actual API call\nconst response=await fetch('/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){throw new Error('Login failed');}const data=await response.json();localStorage.setItem('token',data.token);localStorage.setItem('user',JSON.stringify(data.user));setIsAuthenticated(true);setUser(data.user);return true;}catch(error){console.error('Login error:',error);setError('Login failed. Please check your credentials.');return false;}finally{setLoading(false);}};const register=async(username,email,password)=>{try{setLoading(true);setError(null);// TODO: Replace with actual API call\nconst response=await fetch('/api/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,email,password})});if(!response.ok){throw new Error('Registration failed');}const data=await response.json();localStorage.setItem('token',data.token);localStorage.setItem('user',JSON.stringify(data.user));setIsAuthenticated(true);setUser(data.user);}catch(error){console.error('Registration error:',error);setError('Registration failed. Please try again.');throw error;}finally{setLoading(false);}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,user,currentUser:user,loading,error,login,logout,register},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","userData","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","ok","Error","data","json","setItem","console","register","username","logout","removeItem","Provider","value","currentUser","useAuth","context"],"sources":["C:/Users/Administrator/Downloads/personal-budget-tracker/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: any | null;\r\n  currentUser: any | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on mount\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    if (token && userData) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      // TODO: Replace with actual API call\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      setIsAuthenticated(true);\r\n      setUser(data.user);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setError('Login failed. Please check your credentials.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string): Promise<void> => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      // TODO: Replace with actual API call\r\n      const response = await fetch('/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Registration failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      setIsAuthenticated(true);\r\n      setUser(data.user);\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      setError('Registration failed. Please try again.');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      isAuthenticated, \r\n      user, \r\n      currentUser: user, \r\n      loading, \r\n      error, \r\n      login, \r\n      logout, \r\n      register \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}